<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emg.poiwebeditor.dao.attach.CycleModelDao">
  <resultMap id="BaseResultMap" type="com.emg.poiwebeditor.pojo.CycleModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="logindate" jdbcType="VARCHAR" property="logindate" />
    <result column="logintime" jdbcType="TIMESTAMP" property="logintime" />
    <result column="logouttime" jdbcType="TIMESTAMP" property="logouttime" />
    <result column="timecount" jdbcType="INTEGER" property="timecount" />
    <result column="projecttype" jdbcType="INTEGER" property="projecttype" />
    <result column="isexit" jdbcType="INTEGER" property="isexit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, username, logindate, logintime, logouttime, timecount, isexit, projecttype
  </sql>
  <select id="selectByExample" parameterType="com.emg.poiwebeditor.pojo.CycleModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_cycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_cycle
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectExistRecord"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_cycle
    where userid = #{record.userid,jdbcType=BIGINT} and logindate = #{record.logindate, jdbcType=VARCHAR} and isexit = #{record.isexit, jdbcType=INTEGER} 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_cycle
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.emg.poiwebeditor.pojo.CycleModelExample">
    delete from tb_cycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.emg.poiwebeditor.pojo.CycleModel" 
  keyProperty="id" keyColumn="id" useGeneratedKeys="true">
    insert into tb_cycle ( userid, username, 
      logindate, logintime, logouttime, 
      timecount, isexit, projecttype)
    values ( #{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, 
      #{logindate,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}, #{logouttime,jdbcType=TIMESTAMP}, 
      0, #{isexit,jdbcType=INTEGER}, #{projecttype,jdbcType=INTEGER}) 
  </insert>
  <insert id="insertSelective" parameterType="com.emg.poiwebeditor.pojo.CycleModel">
    insert into tb_cycle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="logindate != null">
        logindate,
      </if>
      <if test="logintime != null">
        logintime,
      </if>
      <if test="logouttime != null">
        logouttime,
      </if>
      <if test="timecount != null">
        timecount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="logindate != null">
        #{logindate,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logouttime != null">
        #{logouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="timecount != null">
        #{timecount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.emg.poiwebeditor.pojo.CycleModelExample" resultType="java.lang.Long">
    select count(*) from tb_cycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_cycle
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.logindate != null">
        logindate = #{record.logindate,jdbcType=VARCHAR},
      </if>
      <if test="record.logintime != null">
        logintime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logouttime != null">
        logouttime = #{record.logouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.timecount != null">
        timecount = #{record.timecount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_cycle
    set id = #{record.id,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      logindate = #{record.logindate,jdbcType=VARCHAR},
      logintime = #{record.logintime,jdbcType=TIMESTAMP},
      logouttime = #{record.logouttime,jdbcType=TIMESTAMP},
      timecount = #{record.timecount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.emg.poiwebeditor.pojo.CycleModel">
    update tb_cycle
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="logindate != null">
        logindate = #{logindate,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        logintime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logouttime != null">
        logouttime = #{logouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="timecount != null">
        timecount = #{timecount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emg.poiwebeditor.pojo.CycleModel">
    update tb_cycle
    set userid = #{userid,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      logindate = #{logindate,jdbcType=VARCHAR},
      logintime = #{logintime,jdbcType=TIMESTAMP},
      logouttime = #{logouttime,jdbcType=TIMESTAMP},
      timecount = #{timecount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateLogouttime" parameterType="com.emg.poiwebeditor.pojo.CycleModel">
    update tb_cycle
    set 
      logouttime = #{cycle.logouttime,jdbcType=TIMESTAMP},
      timecount = EXTRACT(EPOCH FROM (#{cycle.logouttime,jdbcType=TIMESTAMP}-logintime))
   where id = #{cycle.id,jdbcType=BIGINT} 
    and isexit = #{cycle.isexit,jdbcType=INTEGER} 
  </update>
  <!-- 更新结束标识， 指定用户，且结束时间大于指定间隔的，则默认认为其已经退出 -->
  <update id="updateEnd" >
    update tb_cycle
    set 
      isexit = #{cycle.isexit, jdbcType=INTEGER}
    where userid = #{cycle.userid,jdbcType=BIGINT} and logindate=#{cycle.logindate} 
    and EXTRACT(EPOCH FROM (now()-logouttime)) > #{differminute, jdbcType=INTEGER} 
    and isexit = 1 
  </update>
  
   <!-- 退出-->
  <update id="updateExit" >
    update tb_cycle
    set 
      isexit = #{cycle.isexit, jdbcType=INTEGER},
      logouttime = #{cycle.logouttime, jdbcType=TIMESTAMP},
      timecount = EXTRACT(EPOCH FROM (#{cycle.logouttime,jdbcType=TIMESTAMP}-logintime))
      
    where id = #{cycle.id,jdbcType=BIGINT} 
  </update>
  
</mapper>